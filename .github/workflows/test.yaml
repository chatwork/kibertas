name: Test

on:
  push:
  pull_request:

permissions:
  contents: read

concurrency:
  # We runs only one job at a time to prevent contention on subnet CIDRs and EKS cluster names.
  # This is needed because we share the same AWS account and VPC for all the tests.
  group: ${{ github.workflow }}

jobs:
  test:
    environment: test
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.3'
          check-latest: true
      - name: Run tests
        run: make test
  kindtest:
    environment: test
    strategy:
      matrix:
        kind_image:
        - "kindest/node:v1.29.8@sha256:d46b7aa29567e93b27f7531d258c372e829d7224b25e3fc6ffdefed12476d3aa"
        - "kindest/node:v1.30.4@sha256:976ea815844d5fa93be213437e3ff5754cd599b040946b5cca43ca45c2047114"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.3'
          check-latest: true
      - name: Install cloud-provider-kind
        run: make cloud-provider-kind
      - name: Run E2E tests on kind
        run: make e2e/kindtest
        env:
          KIND_IMAGE: ${{ matrix.kind_image }}
  ekstest:
    environment: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    # Have enough timeout for `make e2e`
    # which requires up to 45 minutes to run.
    timeout-minutes: 55
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: 'ap-northeast-1'
          role-to-assume: ${{ secrets.AWS_ROLE_TEST }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.3'
          check-latest: true
      - name: Install cloud-provider-kind
        run: make cloud-provider-kind
      - name: Run E2E tests on EKS
        run: make e2e/ekstest
        env:
          KIND_IMAGE: ${{ matrix.kind_image }}
          VPC_ID: ${{ secrets.VPC_ID }}
  golangci:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21.3'
          cache: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59.0
          args: -v --timeout=10m
